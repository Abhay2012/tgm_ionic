{"version":3,"sources":["webpack:///./src/app/CitiesComponent/CitiesIndex.page.html","webpack:///./src/app/CitiesComponent/CitiesIndex.page.ts","webpack:///./src/app/CitiesComponent/CitiesShow.page.html","webpack:///./src/app/CitiesComponent/CitiesShow.page.ts","webpack:///./src/app/CitiesComponent/cities.module.ts","webpack:///./src/app/services/city.service.ts"],"names":[],"mappings":"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","file":"CitiesComponent-cities-module.js","sourcesContent":["module.exports = \"\\n<layout-sidemenu>\\n  <ion-content fullscreen>\\n    <h1>Cities index</h1>\\n    <ion-list>\\n      <ion-item class='item-borderless' *ngFor=\\\"let city of cities\\\" (click)=\\\"navigateToCity(city)\\\"> \\n        <div>{{ city.name }}</div>\\n      </ion-item>\\n    </ion-list>\\n  </ion-content>\\n</layout-sidemenu>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpParams, } from '@angular/common/http';\nimport { Router, NavigationEnd } from '@angular/router';\n\nimport { ToastController } from '@ionic/angular';\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\n\nimport { environment } from '../../environments/environment';\nimport { AppRouter, ApiRouter } from '../app-router';\nimport { AppService } from '../app-service';\nimport { C, logg } from '../const';\nimport { CityService } from '../services/city.service';\n\n@Component({\n  selector: 'app-cities-index',\n  templateUrl: './CitiesIndex.page.html',\n})\nexport class CitiesIndexPage implements OnInit {\n\n  cities: any = [];\n\n  constructor(\n    private nativeStorage: NativeStorage,\n    private appService: AppService,\n    private router: Router,\n    public httpClient: HttpClient, \n    public toastController: ToastController,\n  ) {\n      const answer = this.httpClient.get(ApiRouter.citiesindex)\n    answer.subscribe(data => {\n      if (data) {\n        this.cities = data;\n      }\n    }, async error => {\n      console.log('+++ citiesindex 1:', error)\n      const toast = await this.toastController.create({\n        message: error,\n        duration: 2000\n      });\n      toast.present();\n    });\n  }\n    \n  navigateToCity(c) {\n    logg(c, 'c');\n    this.router.navigate([AppRouter.cityPath(c)]);\n  }\n    \n  ngOnInit() {\n  }\n}\n","module.exports = \"\\n<layout-sidemenu>\\n  <ion-content padding >\\n    <h1>City page! {{ city.name }}</h1>\\n    <ul>\\n      <li>{{ appRouter.cityPath(city) }}</li>\\n    </ul>\\n  </ion-content>\\n</layout-sidemenu>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpParams, } from '@angular/common/http';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\n\nimport { NativeStorage } from '@ionic-native/native-storage/ngx';\n\nimport { ApiRouter, AppRouter } from '../app-router';\nimport { AppService } from '../app-service';\nimport { environment } from '../../environments/environment';\nimport { CityService } from '../services/city.service';\nimport { LayoutSidemenu } from '../LayoutSidemenu/LayoutSidemenu';\nimport { C, logg } from '../const';\n\n@Component({\n  selector: 'app-cities-show',\n  templateUrl: './CitiesShow.page.html',\n})\nexport class CitiesShowPage implements OnInit {\n  appRouter;\n  city: any = {};\n\n\n  constructor(\n    private nativeStorage: NativeStorage,\n    private appService: AppService,\n    private route: ActivatedRoute,\n    private router: Router,\n    public httpClient: HttpClient,\n    private _cityService: CityService\n  ) {\n    this.appRouter = AppRouter;\n    this.city = { cityname:  this.route.snapshot.paramMap.get('cityname') };\n  }\n  \n  ngOnInit() {\n    \n    // this._cityService.getCity(this._id).subscribe( city => this.city = city);\n  }\n\n  navigate (where) {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { CitiesIndexPage } from './CitiesIndex.page';\nimport { CitiesShowPage } from './CitiesShow.page';\nimport { LayoutSidemenuModule } from '../LayoutSidemenu/LayoutSidemenu.module';\n\nconst routes: Routes = [\n  { path: '', component: CitiesIndexPage, },\n  { path: 'travel-to/:cityname',     component: CitiesShowPage,  },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LayoutSidemenuModule,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [ CitiesIndexPage, CitiesShowPage, ]\n})\nexport class CitiesModule {}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CityService {\n  constructor(private _http: HttpClient) { }\n\n  getAllCities(): any {\n    return this._http.get(`${environment.api_domain}/api/cities.json`);\n  }\n\n}\n"],"sourceRoot":""}