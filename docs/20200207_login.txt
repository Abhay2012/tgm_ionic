

  async doLogin () {
    /* const data = await this.fb.login(['public_profile', 'email']).then(async (res: any) => { // res: FacebookLoginResponse      
      const data = res.authResponse;
      this.currentUser = data;
      this.currentUserStr = JSON.stringify(Object.keys(data).map( k => `${k}::${data[k].toString().substring(0,10)}` ));
      return data;
    });
    const answer = await this.httpClient.get(ApiRouter.longTermToken({ shortTermToken: data.accessToken })).toPromise();
    const thisCurrentUser = {
      accessToken: data.accessToken,
      longTermToken: answer['long_term_token'],
      userID: data.userID,
      type: 'facebook',
    };
    const thisCurrentUserStr = JSON.stringify(thisCurrentUser);
    this.nativeStorage.setItem('current_user', thisCurrentUserStr).then(async () => {
      logg(thisCurrentUserStr, 'set this guy!');

      const result = await this.nativeStorage.getItem('current_user');
      logg(JSON.parse(result), 'and out result');

      this.appService.changeMessage(C.didLogin);
      this.router.navigate([ AppRouter.rootPath ])
    }, (error) => {
      console.log('+++ error:', error)
    });
    // this.render(); */
  }